#!/usr/bin/env -S bash -i

function print0_definition_files() {
    if [ -v DEFINITION_SOURCE ] ; then
        echo -ne "${DEFINITION_SOURCE}\x00"
    else
        echo -ne "${HOME}/.bashrc\x00"
        echo -ne "${HOME}/.bash_topics.d/required_functions.bash.inc\x00"
        get_topics --color=never --print0
    fi
}

function print_proposed_commands() {
    print0_definition_files \
        | xargs -0 \
            rg --hidden --color=never --no-heading --with-filename --no-line-number --no-messages --only-matching \
            --regexp '\s*(?:function)\s+([a-z][a-z0-9_]*).*(#.*)' \
            --replace "\$1:\$2"
}

function print_individual_declares() {
    shopt -s extdebug

    declare -a DEFINED_COMMANDS
    readarray DEFINED_COMMANDS < <( print_proposed_commands )

    declare -A ALREADY_PRINTED
    for COMMAND in "${DEFINED_COMMANDS[@]}" ; do
        COMMAND=$(echo "${COMMAND}" | cut -d ':' -f 2)
        DECLARE="$(declare -F "${COMMAND}")"
        if [[ "${DECLARE}" =~ ^([a-z_]+) ]] ; then
            COMMAND_NAME="${BASH_REMATCH[1]}"
            if [[ ! -v ALREADY_PRINTED["${COMMAND_NAME}"] ]] ; then
                ALREADY_PRINTED["${COMMAND_NAME}"]=1
                echo "${DECLARE}"
            fi
        fi
    done
}

function print_exported_commands() {
    declare -f | rg --color=never --regexp '^declare -fx (.+)' --replace "\$1"
}

PARSED_PARAMS="$(getopt --longoptions source:,aliases --options s:a -- "$@")"
eval set -- "${PARSED_PARAMS}"
while true ; do
    case "${1}" in
        -s|--source)
            DEFINITION_SOURCE="${2/#\~/"${HOME}"}"
            shift 2
            ;;
        -a|--aliases)
            SHOW_ALIASES_INSTEAD=1
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            >&2 echo "usage"
            return 1
    esac
done

if [ -v SHOW_ALIASES_INSTEAD ] ; then
    echo aliases
else
    show_help_helper.py \
        <( print0_definition_files ) \
        <( print_proposed_commands ) \
        <( print_individual_declares ) \
        <( print_exported_commands ) \
        "${1}" \
        | rg --passthru --color=auto --no-line-number --no-filename \
            -e '^[a-z][a-z0-9_]*'
fi
