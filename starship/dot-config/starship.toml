command_timeout = 5000
add_newline = true

format = """
${custom.shell_is_bash}\
${custom.any_other_shell}\
${custom.readline}\
${custom.drive_label}\
$username\
$directory\
$git_branch\
$git_status\
${custom.pixi_env}\
$python\
$rust\
${custom.shell_level}\
\n\
$character
"""

[character]
success_symbol = "[\\$](bold)"
error_symbol = "[\\$](bold red)"

[directory]
truncation_length = 8
truncate_to_repo = true
use_os_path_sep = false

[git_state]
style = "bold blue"

[git_status]
ahead = ">"
behind = "<"
diverged = "<>"
modified = "*"
untracked = "%"
up_to_date = "="

[username]
style_user = "bold blue"
format = "[$user]($style)@"

[python]
symbol = " "
format = '[${symbol}(${version} )(\($virtualenv\) )]($style)'

[custom.shell_is_bash]
command = "echo bash"
format = "[$output](bold red)"
when = "[[ ${STARSHIP_SHELL} =~ bash ]]"

[custom.any_other_shell]
command = "echo $STARSHIP_SHELL"
format = "[$output](bold red) "
when = "[[ ${STARSHIP_SHELL} != bash ]]"

[custom.pixi_env]
# because the conda module doesn't seem to work with pixi
command = "echo $CONDA_DEFAULT_ENV"
when = '[[ -n $PIXI_ENVIRONMENT_NAME ]]'
format = "via [🅿️$output]($style) "
style = "bold green"
description = "Show pixi environment name"

[custom.shell_level]
command = "echo $SHLVL"
when = '[[ $SHLVL -gt 2 ]]'
format = "📦[$output]($style) "    # Package/container feel
style = "bold yellow"
description = "Show shell nesting level when > 2"

[custom.readline]
command = "echo $READLINE_EDIT_MODE"
format = "+[$output](bold red) "
when = "[[ ${STARSHIP_SHELL} =~ bash ]]"

[custom.drive_label]
format = "[($output )](bold fg:40)"
command = "drive_label"
when = "[[ $(get_platform.py) == 'mingw' && -n $(command -v drive_label >/dev/null 2>&1 && drive_label) && $(git rev-parse --is-inside-work-tree >/dev/null 2>&1; echo $?) -eq 0 ]]"
